// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

@mixin graph-stroke-color {
  &.color-index-loading {
    stroke: $unset-color;
    stroke-dasharray: 1px 10px;
    stroke-dashoffset: 0;
  }

  &.color-index-unset {
    stroke: $unset-color;
  }

  @each $status, $color in $brand-status-colors {
    &.color-index-#{$status} {
      stroke: $color;
    }
  }

  @for $i from 1 through length($brand-graph-colors) {
    &.color-index-graph-#{$i},
    &.color-index-graph-#{$i + length($brand-graph-colors)} {
      stroke: nth($brand-graph-colors, $i);
    }
  }

  @for $i from 1 through length($brand-grey-colors) {
    &.color-index-grey-#{$i},
    &.color-index-grey-#{$i + length($brand-grey-colors)} {
      stroke: nth($brand-grey-colors, $i);
    }
  }
}

@mixin graph-stroke-color-translucent($opacity) {
  &.color-index-unset {
    stroke: rgba($unset-color, $opacity);
  }

  @each $status, $color in $brand-status-colors {
    &.color-index-#{$status} {
      stroke: rgba($color, $opacity);
    }
  }

  @for $i from 1 through length($brand-graph-colors) {
    &.color-index-graph-#{$i},
    &.color-index-graph-#{$i + length($brand-graph-colors)} {
      stroke: rgba(nth($brand-graph-colors, $i), $opacity);
    }
  }
}

@mixin graph-fill-color {
  &.color-index-unset {
    fill: $unset-color;
  }

  @each $status, $color in $brand-status-colors {
    &.color-index-#{$status} {
      fill: $color;
    }
  }

  @for $i from 1 through length($brand-graph-colors) {
    &.color-index-graph-#{$i},
    &.color-index-graph-#{$i + length($brand-graph-colors)} {
      fill: nth($brand-graph-colors, $i);
    }
  }

  @for $i from 1 through length($brand-grey-colors) {
    &.color-index-grey-#{$i},
    &.color-index-grey-#{$i + length($brand-grey-colors)} {
      fill: nth($brand-grey-colors, $i);
    }
  }
}

@mixin graph-fill-color-translucent($opacity) {
  @each $status, $color in $brand-status-colors {
    &.color-index-#{$status} {
      fill: rgba($color, $opacity);
    }
  }

  @for $i from 1 through length($brand-graph-colors) {
    &.color-index-graph-#{$i},
    &.color-index-graph-#{$i + length($brand-graph-colors)} {
      fill: rgba(nth($brand-graph-colors, $i), $opacity);
    }
  }
}

@mixin graph-fill-color-gradient() {
  @each $status, $color in $brand-status-colors {
    &.color-index-#{$status} {
      .begin {
        stop-color: $color;
      }

      .mid {
        stop-color: $color;
        stop-opacity: 0.5;
      }

      .end {
        stop-color: $color;
        stop-opacity: 0;
      }
    }
  }

  @for $i from 1 through length($brand-graph-colors) {
    &.color-index-graph-#{$i},
    &.color-index-graph-#{$i + length($brand-graph-colors)} {
      .begin {
        stop-color: nth($brand-graph-colors, $i);
      }

      .mid {
        stop-color: nth($brand-graph-colors, $i);
        stop-opacity: 0.5;
      }

      .end {
        stop-color: nth($brand-graph-colors, $i);
        stop-opacity: 0;
      }
    }
  }
}
