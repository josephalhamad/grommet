// (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.

$meter-size: $graphic-size;
$meter-small-size: $graphic-small-size;
$meter-large-size: $graphic-large-size;

$meter-width: round($inuit-base-spacing-unit * 0.75);
$meter-inactive-width: round($inuit-base-spacing-unit * 0.25);
$meter-threshold-width: round($inuit-base-spacing-unit * 0.25);

$meter-arc-size: $meter-size - double($inuit-base-spacing-unit);
$meter-arc-small-size: $meter-small-size - $inuit-base-spacing-unit;
$meter-arc-large-size: $meter-large-size - round($inuit-base-spacing-unit * 3);
$meter-label-width: double($inuit-base-spacing-unit);
$meter-active-offset: round($inuit-base-spacing-unit * 1.5);

@include keyframes(draw-meter) {
  0% {
    stroke-dashoffset: $meter-size;
  }

  100% {
    stroke-dashoffset: 0;
  }
}

@include keyframes(draw-arc) {
  0% {
    stroke-dashoffset: - $meter-size;
  }

  100% {
    stroke-dashoffset: 0;
  }
}

.meter {
  display: inline-block;
  position: relative;

  &__threshold {
    stroke: $threshold-color;
  }

  &__active-graphic {
    position: relative;
    display: inline-block;
  }

  &__labeled-graphic {
    white-space: normal;
  }

  &__active {
    white-space: normal;
    pointer-events: none;

    &-value {
      @include inuit-font-size($large-number-font-size, $inuit-heading-size-1 + 2);
      font-weight: bold;
    }

    &-units {
      @include inuit-font-size($large-number-units-font-size, inherit);
      margin-left: quarter($inuit-base-spacing-unit);
      color: $secondary-text-color;
      font-weight: normal;
    }
  }

  &__minmax-container {
    display: block;
  }

  &__minmax {
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    color: $secondary-text-color;
    @include inuit-font-size($label-font-size);
  }

  &__label-min,
  &__label-max {
    -webkit-flex: 0 0 $meter-label-width;
    flex: 0 0 $meter-label-width;
  }

  &__label-max {
    text-align: right;
  }

  &--legend {
    &-right {
      white-space: nowrap;

      .meter {
        &__legend {
          vertical-align: top;
          margin-left: $inuit-base-spacing-unit;
        }
      }

      &:not(.meter--tall-legend) {
        .meter__legend {
          position: relative;
          @include transform(translateY(-50%));
        }
      }
    }

    &-bottom {
      .meter {
        &__legend {
          margin-top: $inuit-base-spacing-unit;
          display: block;
        }
      }
    }
  }

  &:not(.meter--vertical) {
    .meter {
      &__minmax-container {
        width: $meter-size;
      }

      &__minmax {
        width: 100%;
      }
    }

    &.meter--small {
      .meter {
        &__minmax-container {
          width: $meter-small-size;
        }
      }
    }

    &.meter--large {
      .meter {
        &__minmax-container {
          width: $meter-large-size;
        }
      }
    }
  }

  &--vertical {
    .meter {

      &__labeled-graphic {
        display: inline-block;
        white-space: nowrap;
      }

      &__minmax {
        -webkit-flex-direction: column;
        flex-direction: column;
        height: 100%;
      }

      &__minmax-container {
        height: $meter-size;
      }

      &__label-min,
      &__label-max {
        -webkit-flex: 0 0 auto;
        flex: 0 0 auto;
        text-align: left;
      }

      &__label-min {
        -webkit-order: 1;
        order: 1;
      }

      &__label-max {
        -webkit-order: 0;
        order: 0;
      }

      &__active {
        &-label {
          display: block;
        }
      }
    }

    &.meter--small {
      .meter {
        &__minmax-container {
          height: $meter-small-size;
        }
      }
    }

    &.meter--large {
      .meter {
        &__minmax-container {
          height: $meter-large-size;
        }
      }
    }
  }

  &--small {
    .meter__active {
      &-value {
        @include inuit-font-size($small-large-number-font-size);
      }

      &-units {
        @include inuit-font-size($small-large-number-units-font-size);
      }
    }
  }

  &--large {
    .meter__active {
      &-value {
        @include inuit-font-size($large-large-number-font-size);
      }

      &-units {
        @include inuit-font-size($large-large-number-units-font-size);
      }
    }
  }

  &.meter--active {
    .meter {
      &__values .meter__slice,
      &__values .meter__bar {
        stroke-width: $meter-threshold-width;

        &--active {
          stroke-width: $meter-width;
        }
      }
    }
  }

  // BAR

  &--bar {
    .meter {
      &__bar {
        stroke-linecap: butt;
        stroke-dasharray: $meter-size $meter-size;
        stroke-dashoffset: 0;
      }

      &__values .meter__bar {
        stroke-width: $meter-width;
        @include graph-stroke-color();
        cursor: pointer;

        @include media-query(lap-and-up) {
          transition: stroke-width 0.2s;
          @include animation('draw-meter 1.5s linear');
        }
      }

      &__thresholds .meter__bar {
        stroke-width: $meter-threshold-width;
        @include graph-stroke-color-translucent(0.5);
      }

      &__active {
        &-label {
          width: 50%;
          margin: 0px auto;
          @include inuit-font-size($label-font-size, $label-font-size + 2);
        }
      }
    }

    &:not(.meter--vertical) {
      .meter {
        &__labeled-graphic {
          display: inline-block;
        }

        &__graphic {
          width: $meter-size;
          min-height: $inuit-base-spacing-unit;
        }

        &__active {
          display: inline-block;
          vertical-align: top;
          margin-left: halve($inuit-base-spacing-unit);

          &-value {
            @include inuit-font-size($number-font-size);
          }

          &-units {
            @include inuit-font-size($number-units-font-size);
          }
        }
      }

      &.meter--legend-right {
        .meter__legend {
          top: 0px;
          @include transform(none);
        }
      }

      &.meter--small {
        svg.meter__graphic {
          width: $meter-small-size;
        }

        .meter__active-value,
        .meter__active-units {
          @include inuit-font-size($inuit-base-font-size);
        }
      }

      &.meter--large {
        svg.meter__graphic {
          width: $meter-large-size;
        }

        .meter__active {
          margin-left: $inuit-base-font-size;

          &-value,
          &-units {
            @include inuit-font-size($number-font-size + 2, inherit);
          }
        }
      }
    }

    &.meter--vertical {
      white-space: nowrap;

      svg.meter__graphic {
        min-width: $inuit-base-spacing-unit;
        height: $meter-size;
      }

      .meter {

        &__labeled-graphic {
          display: inline-block;
        }

        &__active {
          position: relative;
          vertical-align: top;
          top: halve($meter-size);
          @include transform(translateY(-50%));
          display: inline-block;
          margin-left: halve($inuit-base-spacing-unit);
        }

        &__minmax-container {
          position: absolute;
          top: 0px;
          left: $inuit-base-spacing-unit + halve($inuit-base-spacing-unit);
        }
      }

      &.meter--legend-right {
        .meter__legend {
          top: halve($meter-size);
        }
      }

      &.meter--small {
        svg.meter__graphic {
          height: $meter-small-size;
        }

        .meter__active {
          top: halve($meter-small-size);
        }

        &.meter--legend-right {
          .meter__legend {
            top: halve($meter-small-size);
          }
        }
      }

      &.meter--large {
        svg.meter__graphic {
          height: $meter-large-size;
        }

        .meter__active {
          top: halve($meter-large-size);
        }

        &.meter--legend-right {
          .meter__legend {
            top: halve($meter-large-size);
          }
        }
      }
    }
  }

  // CIRCLE, ARC, SPIRAL

  &--circle,
  &--arc,
  &--spiral {
    @include media-query(palm) {
      margin: 0px auto;
    }

    svg.meter__graphic {
      display: block;
    }

    .meter {

      &.series-pre {
        path {
          stroke-dashoffset: quadruple($meter-size);
        }
      }

      &__slice {
        stroke-linecap: butt;
        stroke-dasharray: quadruple($meter-size) quadruple($meter-size);
        stroke-dashoffset: 0;
        fill: none;
        cursor: pointer;
        stroke: $meter-background-color;

        &-indicator {
          stroke-linecap: round;
          stroke-width: 3;
          stroke: #000;
          //@include graph-stroke-color;
        }
      }

      &__values .meter__slice {
        stroke-width: $meter-width;
        @include graph-stroke-color();

        @include media-query(lap-and-up) {
          transition: stroke-width 0.2s;
          @include animation('draw-arc 1.5s linear');
        }
      }

      &__thresholds .meter__slice {
        stroke-width: $meter-threshold-width;
        @include graph-stroke-color-translucent(0.5);
      }

      &__threshold {
        //stroke-width: $inuit-base-spacing-unit;
        stroke-linecap: butt;
      }

      &__active {
        &-label {
          display: block;
        }
      }
    }
  }

  // CIRCLE, ARC

  &--circle,
  &--arc {
    @include media-query(palm) {
      width: $meter-size;
    }

    .meter {
      &__active {
        white-space: normal;
        pointer-events: none;
        text-align: center;
      }
    }
  }

  &--circle,
  &--arc:not(.meter--vertical) {
    .meter {
      &__minmax-container {
        width: $meter-size;
      }

      &__active {
        position: absolute;
        left: 50%;
      }
    }

    &.meter--small {
      .meter {
        &__minmax-container {
          width: $meter-small-size;
        }
      }
    }

    &.meter--large {
      .meter {
        &__minmax-container {
          width: $meter-large-size;
        }
      }
    }
  }

  &--circle,
  &--arc.meter--vertical {
    &.meter--legend-right {
      .meter__legend {
        top: halve($meter-size);
      }

      &.meter--small {
        .meter__legend {
          top: halve($meter-small-size);
        }
      }

      &.meter--large {
        .meter__legend {
          top: halve($meter-large-size);
        }
      }
    }
  }

  // CIRCLE

  &--circle {
    svg.meter__graphic {
      width: $meter-size;
      height: $meter-size;
    }

    .meter__active {
      top: 50%;
      @include transform(translateX(-50%) translateY(-50%));
      max-width: $meter-size - double($inuit-base-spacing-unit);
    }

    &.meter--small {
      svg.meter__graphic {
        width: $meter-small-size;
        height: $meter-small-size;
      }

      .meter__active {
        max-width: $meter-small-size - $inuit-base-spacing-unit;
      }
    }

    &.meter--large {
      svg.meter__graphic {
        width: $meter-large-size;
        height: $meter-large-size;
      }

      .meter__active {
        max-width: $meter-large-size - round($inuit-base-spacing-unit * 3);
      }
    }
  }

  // ARC

  &--arc {
    &:not(.meter--vertical) {
      svg.meter__graphic {
        width: $meter-size;
        height: $meter-arc-size;
      }

      .meter__active {
        top: round($meter-arc-size * 0.7);
        @include transform(translateX(-50%));
        max-width: $meter-size - round($inuit-base-spacing-unit * 3);
      }

      &.meter--legend-right {
        .meter__legend {
          top: halve($meter-arc-size);
        }
      }

      &.meter--small {
        svg.meter__graphic {
          width: $meter-small-size;
          height: $meter-arc-small-size;
        }

        .meter__active {
          top: round($meter-arc-small-size * 0.7);
          max-width: $meter-small-size - round($inuit-base-spacing-unit * 1.5);
        }
      }

      &.meter--large {
        svg.meter__graphic {
          width: $meter-large-size;
          height: $meter-arc-large-size;
        }

        .meter__active {
          top: round($meter-arc-large-size * 0.5);
          max-width: $meter-large-size - round($inuit-base-spacing-unit * 4.5);
        }

        &.meter--single {
          .meter__active {
            top: round($meter-arc-large-size * 0.7);
          }
        }
      }
    }

    &.meter--vertical {

      svg.meter__graphic {
        display: inline;
        width: $meter-arc-size;
        height: $meter-size;
      }

      .meter {

        &__active {
          position: relative;
          top: halve($meter-size);
          @include transform(translateY(-50%));
          display: inline-block;
          margin-left: - ($meter-size - $meter-arc-size) + halve($inuit-base-spacing-unit);
          vertical-align: top;
        }

        &__minmax-container {
          display: inline-block;
          vertical-align: top;
          margin-left: halve($inuit-base-spacing-unit);
          padding-top: halve($inuit-base-spacing-unit);
          padding-bottom: halve($inuit-base-spacing-unit);
        }
      }

      &.meter--small {
        svg.meter__graphic {
          width: $meter-arc-small-size;
          height: $meter-small-size;
        }

        .meter {
          &__active {
            top: halve($meter-small-size);
            margin-left: - ($meter-small-size - $meter-arc-small-size) + quarter($inuit-base-spacing-unit);
          }

          &__minmax-container {
            padding-top: 0px;
            padding-bottom: 0px;
          }
        }
      }

      &.meter--large {
        svg.meter__graphic {
          width: $meter-arc-large-size;
          height: $meter-large-size;
        }

        .meter {
          &__active {
            top: halve($meter-large-size);
            margin-left: - ($meter-large-size - $meter-arc-large-size) + $inuit-base-spacing-unit;
          }
        }
      }

      &.meter--minmax {
        .meter__active {
          margin-left: - halve($meter-size) + halve($inuit-base-spacing-unit);
        }

        &.meter--small {
          .meter__active {
            margin-left: - ($meter-small-size - $meter-arc-small-size) - round($inuit-base-spacing-unit * 1.5);
          }
        }
      }

      &:not(.meter--single) {
        .meter__active {
          margin-left: - $meter-arc-size + double($inuit-base-spacing-unit);
        }

        &.meter--small {
          .meter__active {
            margin-left: - $meter-arc-small-size + round($inuit-base-spacing-unit * 1.5);
          }
        }
      }
    }
  }

  // SPIRAL

  &--spiral {
    .meter {
      &__active {
        position: absolute;
        top: 0px;
        right: 0px;
        white-space: normal;
        text-align: right;

        &-value {
          display: block;
          @include inuit-font-size($number-font-size);
          margin-bottom: quarter($inuit-base-spacing-unit);
        }

        &-units {
          @include inuit-font-size($number-units-font-size);
          color: $secondary-text-color;
          margin-left: 0.2em;
        }

        &-label {
          display: block;
          @include inuit-font-size($label-font-size, $label-font-size + 2);
        }
      }
    }
  }

  &--loading {
    .meter__thresholds,
    .meter__active {
      display: none;
    }
  }
}
